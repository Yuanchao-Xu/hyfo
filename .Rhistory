}
}
}
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local1, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine <- versionLine + 2
info_msg <- strsplit(strsplit(page[infoLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- NULL
if (!sameVersion) {
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
}
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
hyfoUpdates()
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine <- versionLine + 2
info_msg <- strsplit(strsplit(page[infoLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- NULL
if (!sameVersion) {
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
}
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
hyfoUpdates()
version12
version_local12
sameVersion
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine <- versionLine + 2
info_msg <- strsplit(strsplit(page[infoLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- NULL
if (any(sameVersion == FALSE)) {
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
}
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
hyfoUpdates()
N
sameVersion
message_out
devtools::document()
devtools::check()
devtools::check()
library(hyfo)
devtools::install_github('Yuanchao-Xu/hyfo')
library(hyfo)
?getBiasFactor
?applyBiasFactor
?resample
library(hyfo)
library(hyfo)
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine <- versionLine + 2
info_msg <- strsplit(strsplit(page[infoLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- NULL
if (any(sameVersion == FALSE)) {
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
}
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
hyfoUpdates()
debug(hyfoUpdates)
hyfoUpdates()
version_msg
info_msg
info_msg
strsplit(strsplit(page[infoLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
strsplit(strsplit(page[infoLine + 1], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine
page[57]
page[58]
page[58 : 60]
page[57]
page[60]
page[61]
page[63]
page[62]
page[64]
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
if (any(sameVersion == FALSE)) {
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine_start <- versionLine + 1
infoLine_end <- grep('<p>For historical releases and the introduction of updates about each version', page)
info_msg <- ''
for (infoLine in infoLine_start:infoLine_end) {
info_msg <- c(info_msg, strsplit(strsplit(page[infoLine], split = '<p>')[[1]][2], split = '</p>')[[1]])
}
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
} else message_out <- NULL
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
hyfoUpdates()
debug(hyfoUpdates)
hyfoUpdates()
sameVersion
version_msg
infoLine_start
infoLine_end
infoLine
strsplit(strsplit(page[infoLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
strsplit(strsplit(page[57], split = '<p>')[[1]][2], split = '</p>')[[1]]
strsplit(strsplit(page[58], split = '<p>')[[1]][2], split = '</p>')[[1]]
strsplit(strsplit(page[59], split = '<p>')[[1]][2], split = '</p>')[[1]]
page[59]
strsplit(page[59], split = '<p>')[[1]][2], split = '</p>'
strsplit(page[59], split = '<p>')[[1]][2], split = '</p>')
strsplit(page[59], split = '<p>')[[1]][2]
strsplit(page[59], split = '<p>')
page[59]
page[58]
page[57]
page[56:64]
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
if (any(sameVersion == FALSE)) {
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine_start <- versionLine + 1
infoLine_end <- grep('<p>For historical releases and the introduction of updates about each version', page)
info_msg <- ''
for (infoLine in infoLine_start:infoLine_end) {
info_msg <- c(info_msg, strsplit(strsplit(page[infoLine], split = '<*>')[[1]][2], split = '</p>')[[1]])
}
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
} else message_out <- NULL
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
if (any(sameVersion == FALSE)) {
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine_start <- versionLine + 1
infoLine_end <- grep('<p>For historical releases and the introduction of updates about each version', page)
info_msg <- ''
for (infoLine in infoLine_start:infoLine_end) {
info_msg <- c(info_msg, strsplit(strsplit(page[infoLine], split = '<*>')[[1]][2], split = '</p>')[[1]])
}
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
} else message_out <- NULL
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
hyfoUpdates()
strsplit(strsplit(page[infoLine], split = '<*>')[[1]][2], split = '<*>')[[1]]
strsplit(strsplit(page[infoLine], split = '<*>')[[1]][2]
strsplit(page[infoLine], split = '<*>')[[1]][2]
strsplit(page[infoLine], split = '>')[[1]][2]
strsplit(page[infoLine], split = '>')
strsplit(page[58], split = '>')
strsplit(page[infoLine], split = '>')Q
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
if (any(sameVersion == FALSE)) {
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine_start <- versionLine + 2
infoLine_end <- grep('<p>For historical releases and the introduction of updates about each version', page) - 1
info_msg <- ''
for (infoLine in infoLine_start:infoLine_end) {
info_msg <- c(info_msg, strsplit(strsplit(page[infoLine], split = '>')[[1]][2], split = '<')[[1]])
}
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
} else message_out <- NULL
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
hyfoUpdates()
infor_msg
info_msg
info_msg
strsplit(strsplit(page[infoLine], split = '>')[[1]][2], split = '<')[[1]]
strsplit(strsplit(page[infoLine], split = '>')[[1]][2], split = '<')[[1]][1]
q
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
if (any(sameVersion == FALSE)) {
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine_start <- versionLine + 2
infoLine_end <- grep('<p>For historical releases and the introduction of updates about each version', page) - 1
info_msg <- ''
for (infoLine in infoLine_start:infoLine_end) {
info_line <- strsplit(strsplit(page[infoLine], split = '>')[[1]][2], split = '<')[[1]][1]
if (!is.na(info_line)) info_msg <- c(info_msg, info_line)
}
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
} else message_out <- NULL
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
hyfoUpdates()
info_msg
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
if (any(sameVersion == FALSE)) {
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine_start <- versionLine + 2
infoLine_end <- grep('<p>For historical releases and the introduction of updates about each version', page) - 1
info_msg <- character()
for (infoLine in infoLine_start:infoLine_end) {
info_line <- strsplit(strsplit(page[infoLine], split = '>')[[1]][2], split = '<')[[1]][1]
if (!is.na(info_line)) info_msg <- c(info_msg, info_line)
}
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
} else message_out <- NULL
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
if (any(sameVersion == FALSE)) {
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine_start <- versionLine + 2
infoLine_end <- grep('<p>For historical releases and the introduction of updates about each version', page) - 1
info_msg <- character()
for (infoLine in infoLine_start:infoLine_end) {
info_line <- strsplit(strsplit(page[infoLine], split = '>')[[1]][2], split = '<')[[1]][1]
if (!is.na(info_line)) info_msg <- c(info_msg, info_line)
}
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- paste(version_msg, info_msg, install_msg, sep = '\n')
} else message_out <- NULL
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
debug(hyfoUpdates)
hyfoUpdates()
info_msg
devtools::document()
hyfoUpdates()
info_msg
version_msg
?paste
paste("1st", "2nd", "3rd", collapse = ", ")
paste("1st", "2nd", "3rd", sep = ", ")
paste("1st", "2nd", "3rd", collapse = ", dafa")
paste("1st", "2nd", "3rd", collapse = "dafa")
paste("1st", "2nd", "3rd", collapse = "")
paste("1st", "2nd", "3rd")
paste("1st", "2nd", "3rd", collapse = "-")
paste("1dafst", "2dasfnd", "dafa3rd", collapse = "-")
## For package updates information
#' @importFrom utils packageDescription
hyfoUpdates <- function(){
page <- readLines('http://yuanchao-xu.github.io/hyfo/')
updatesLine <- grep('id=\\"updates"', page)
versionLine <- updatesLine + 2
version <- unlist(strsplit(page[versionLine], split = ' '))[2]
version_local <- packageDescription("hyfo")$Version
# the first tow digit is the most important part of the version
version12 <- unlist(strsplit(version, split = "[.]"))[1:2]
version_local12 <- unlist(strsplit(version_local, split = "[.]"))[1:2]
sameVersion <- version12 == version_local12
if (any(sameVersion == FALSE)) {
# generate message
version_msg <- strsplit(strsplit(page[versionLine], split = '<p>')[[1]][2], split = '</p>')[[1]]
infoLine_start <- versionLine + 2
infoLine_end <- grep('<p>For historical releases and the introduction of updates about each version', page) - 1
info_msg <- character()
for (infoLine in infoLine_start:infoLine_end) {
info_line <- strsplit(strsplit(page[infoLine], split = '>')[[1]][2], split = '<')[[1]][1]
if (!is.na(info_line)) info_msg <- c(info_msg, info_line)
}
install_msg <- 'You can update by type in: devtools::install_gihub("Yuanchao-Xu/hyfo")'
message_out <- paste(version_msg, paste(info_msg, collapse = '\n'), install_msg, sep = '\n')
} else message_out <- NULL
return(message_out)
}
.onAttach <- function(libname, pkgname) {
message_out <- suppressWarnings(try(hyfoUpdates(), silent = TRUE))
if (!is.null(message_out)) {
if (grepl('Version', message_out)) {
packageStartupMessage(message_out)
}
}
}
devtools::document()
devtools::check()
devtools::document()
devtools::install_github('Yuanchao-Xu/hyfo')
library(hyfo)
devtools::document()
devtools::document
devtools::document()
devtools::check()
