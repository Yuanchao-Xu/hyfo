{
    "contents" : "# \n# print <- function(object, ...) {\n#   UseMethod('print')\n# }\n# \n# print.biasFactor <- function(object, ...) {\n#   msg <- paste('biasFactor of method ', object@method)\n#   if (length(object@memberDim)) msgM <- paste('There are', object@memberDim, 'members existing in the forecasting data.')\n#   return(c(msg, msgM))\n# }\n\n#' #### Generics of biasFactor\n# @param object biasFactor object\n# @export\n# setGeneric('print', function(object) {\n#   standardGeneric('print')\n# })\n# \n# \n# setMethod('print', signature('biasFactor'), function(object) {\n#   msg <- paste('biasFactor of method ', object@method)\n#   if (length(object@memberDim)) msgM <- paste('There are', object@memberDim, 'members existing in the forecasting data.')\n#   return(c(msg, msgM))\n# })\n\n# #' @export\n# #' @param a biasFactor object\n# size <- function(x, ...) {\n#   UseMethod('size', x)\n# }\n# \n# #' @describeIn size\n# size.biasFactor <-function(object) {\n#   if (length(object@lonLatDim) == 0) {\n#     return (1)\n#   } else {\n#     lonLat <- object@lonLatDim\n#     msg <- paste('Grid file with', lonLat[1], 'grids in longitude, ', lonLat[2], 'grids in latitude.')\n#     return(msg)\n#   }\n# }\n\n##### hyfo\n\n# hyfo, TS and datalist should be three kinds of objects, so that many functions in hyfo can be split\n# into different generic methods, then no need to set up input = TS or input = hyfo.\n# But too much work to re-construct all the functions.\n\n# For new methods, it should set up different generic methods for hyfo, TS, and grid file from \n# downscaleR.\n",
    "created" : 1446239993498.000,
    "dirty" : false,
    "encoding" : "ASCII",
    "folds" : "",
    "hash" : "782457068",
    "id" : "7FAF7171",
    "lastKnownWriteTime" : 1446409776,
    "path" : "E:/1/R/hyfo/R/generics.R",
    "project_path" : "R/generics.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "type" : "r_source"
}