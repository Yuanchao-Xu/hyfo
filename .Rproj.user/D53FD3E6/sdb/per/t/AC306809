{
    "contents" : "#' Monthly data to daily data and the reverse conversion.\n#' \n#' @param TS A time series, with first column date, and second column value. The date column should\n#' follow the format in \\code{as.Date}, i.e. seperate with \"-\" or \"/\". Check details for more information.\n#' @param method A string showing whether you want to change a daily data to monthly data or monthly\n#' data to daily data.e.g. \"mon2day\" and \"day2mon\".\n#' @details \n#' Note, when you want to change daily data to monthly data, a new date column will be generated,\n#' usually the date column will be the middle date of each month, 15th, or 16th. However, if your \n#' time series doesn't start from the beginning of a month or ends to the end of a month, e.g. \n#' from 1999-3-14 to 2008-2-2, the first and last generated date could be wrong. Not only the date, but also the data, because you are \n#' not calculating based on a intact month. \n#' @return converted time series.\n#' @examples\n#' # Daily to monthly\n#' data(testdl)\n#' TS <- testdl[[2]] # Get daily data\n#' str(TS)\n#' TS_new <- resample(TS, method = 'day2mon')\n#' \n#' # Monthly to daily\n#' TS <- data.frame(Date = seq(as.Date('1999-9-15'), length = 30, by = '1 month'), \n#' runif(30, 3, 10))\n#' TS_new <- resample(TS, method = 'mon2day')\n#' \n#' # More examples can be found in the user manual on http://yuanchao-xu.github.io/hyfo/\n#' \n#' @export\n#' @importFrom stats aggregate\n#' @references \n#' \n#' \\itemize{\n#' \\item R Core Team (2015). R: A language and environment for statistical computing. R Foundation for\n#' Statistical Computing, Vienna, Austria. URL http://www.R-project.org/.\n#' }\n#' \n#' \nresample <- function(TS, method){\n  if (length(TS) != 2) {\n    stop('Time series not correct, should be two columns, Date and value.')\n  } else if (!grepl('-|/', TS[1, 1])) {\n    stop('First column is not date or Wrong Date formate, check the format in ?as.Date{base} \n          and use as.Date to convert.')\n  } \n  \n  \n  if (method == 'mon2day') {\n  \n    data <- apply(TS, MARGIN = 1 , FUN = mon2day)\n    \n    output <- do.call('rbind', data)\n  } else if (method == 'day2mon') {\n    Date <- as.Date(TS[, 1])\n    year <- format(Date, format = '%Y')\n    mon <- format(Date, format = '%m')\n    \n    data <- aggregate(TS, by = list(year, mon), FUN = mean, na.rm = TRUE)\n    data <- data[order(data$Date), ][, 3:4]\n    rownames(data) <- 1:dim(data)[1]\n    output <- data\n  } else {\n    stop('method is not correct, check method argument.')\n  }\n\n  return (output)\n}\n\n#' @importFrom utils tail\n#' @references \n#' \n#' \\itemize{\n#' \\item R Core Team (2015). R: A language and environment for statistical computing. R Foundation for\n#' Statistical Computing, Vienna, Austria. URL http://www.R-project.org/.\n#' }\n#' \nmon2day <- function(monData) {\n  Date <- as.Date(monData[1])\n  data <- monData[2]\n  \n  DateY <- format(Date, format = '%Y')\n  DateM <- format(Date, format = '%m')\n  DateL <- seq(Date, length = 2, by = '1 months')[2] - Date\n  \n  DateD <- 1:DateL\n  \n  start <- as.Date(paste(DateY, DateM, DateD[1], sep = '-'))\n  end <- as.Date(paste(DateY, DateM, tail(DateD, 1), sep = '-'))\n  \n  Date <- seq(start, end, by = '1 day')\n  \n  dailyData <- data.frame(Date = Date, value = rep(data, DateL))\n  \n  return(dailyData)\n}",
    "created" : 1446420392398.000,
    "dirty" : false,
    "encoding" : "ASCII",
    "folds" : "",
    "hash" : "4200103718",
    "id" : "AC306809",
    "lastKnownWriteTime" : 1446424066,
    "path" : "E:/1/R/hyfo/R/resample.R",
    "project_path" : "R/resample.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}