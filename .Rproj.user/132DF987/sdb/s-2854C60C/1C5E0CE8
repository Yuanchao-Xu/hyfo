{
    "contents" : "\n#' Extract common period or certain period from a list of different dataframes of time series.\n#' NOTE: all the dates in the datalist should follow the format in ?as.Date{base}.\n#' @param datalist A list of different dataframes of time series .\n#' @param startDate A Date showing the start of the extract period, default as NULL.\n#' @param endDate A Date showing the end of the extract period, default as NULL.\n#' @param commonPeriod A boolean showing whether the common period is extracted. If chosen, startDate and endDate\n#' should be NULL.\n#' @return A list with all the time series inside containing the same period.\n#' @examples\n#' # Generate timeseries datalist. Each data frame consists of a Date and a value.\n#' \n#' AAA <- data.frame(\n#' # date column\n#' Date = seq(as.Date('1990-10-28'),as.Date('1997-4-1'),1),\n#'  # value column\n#' AAA = sample(1:100,length(seq(as.Date('1990-10-28'),as.Date('1997-4-1'),1)), repl = TRUE))\n#' \n#' BBB <- data.frame(\n#' Date = seq(as.Date('1993-3-28'),as.Date('1999-1-1'),1), \n#' BBB = sample(1:100,length(seq(as.Date('1993-3-28'),as.Date('1999-1-1'),1)), repl = TRUE))\n#'  \n#' CCC <- data.frame(\n#' Date = seq(as.Date('1988-2-2'),as.Date('1996-1-1'),1), \n#' CCC = sample(1:100,length(seq(as.Date('1988-2-2'),as.Date('1996-1-1'),1)), repl = TRUE)) \n#' \n#' list <- list(AAA, BBB, CCC)# dput() and dget() can be used to save and load list file.\n#' \n#' list_com <- extractPeriod(list, commonPeriod = TRUE)\n#' \n#' # list_com is the extracted datalist.\n#' str(list_com)\n#' \n#' # If startDate and endDate is provided, the record between them will be extracted.\n#' # make sure startDate is later than any startDate in each dataframe and endDate is \n#' # earlier than any endDate in each dataframe.\n#' \n#' data(testdl)\n#' datalist_com1 <- extractPeriod(testdl, startDate = '1994-1-1', endDate = '1995-10-1')\n#' \n#' \n#' @import zoo\n#' @export\nextractPeriod <- function(datalist, startDate = NULL, endDate = NULL, commonPeriod = FALSE) {\n  \n  if (!is.null(startDate) & !is.null(endDate) & commonPeriod == FALSE) {\n    dataset <- lapply(datalist, extractPeriod_dataset, startDate = startDate, endDate = endDate)\n  } else if (is.null(startDate) & is.null(endDate) & commonPeriod == TRUE) {\n    \n    Dates <- lapply(datalist, extractPeriod_getDate) \n    Dates <- do.call('rbind', Dates)\n    \n    startDate <- as.Date(max(Dates[, 1]))\n    endDate <- as.Date(min(Dates[, 2]))\n    \n    dataset <- lapply(datalist, extractPeriod_dataset, startDate = startDate, endDate = endDate)\n    \n  } else {\n    stop('Enter startDate and endDate, set commonPeriod as False, or simply set commonPeriod as TRUE')\n  }\n  \n  return(dataset)\n}\n\n\n#' Extract data from a dataframe with startDate and endDate\n#' \n#' @param dataset A dataset with first column being a series of date or time.\n#' @param startDate A date representing the start date.\n#' @param endDate A date representing the end date.\n#' @return The extracted dataframe between \\code{startDate} and \\code{endDate}.\nextractPeriod_dataset <- function(dataset, startDate, endDate) {\n  \n  dataset[, 1] <- as.Date(dataset[, 1])\n  \n  startIndex <- which(dataset[, 1] == startDate)\n  endIndex <- which(dataset[, 1] == endDate)\n  if (length(startIndex) == 0 | length(endIndex) == 0) {\n    stop('startDate and endDate exceeds the date limits in dataframe. Check datalsit please.')\n  }\n  output <- dataset[startIndex:endIndex, ]\n  \n  return(output)  \n}\n\n#' @importFrom utils tail\nextractPeriod_getDate <- function(dataset) {\n  \n  if (!grepl('-|/', dataset[1, 1])) {\n    stop('First column is not date or Wrong Date formate, check the format in ?as.Date{base}, \n          and use as.Date to convert.')\n  }\n  start <- as.Date(dataset[1, 1])\n  end <- as.Date(tail(dataset[, 1], 1))\n  \n  \n  return(c(start, end))\n}\n",
    "created" : 1435737505373.000,
    "dirty" : false,
    "encoding" : "ASCII",
    "folds" : "",
    "hash" : "3993028558",
    "id" : "1C5E0CE8",
    "lastKnownWriteTime" : 1435737564,
    "path" : "~/hyfo/R/extractPeriod.R",
    "project_path" : "R/extractPeriod.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}