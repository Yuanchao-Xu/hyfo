{
    "contents" : "###Start_Code\n\n\n#Written by Yuanchao XU, email: xuyuanchao37@gmail.com, xyc@dhigroup.com\n#\n#Version 1.2\n\n#Updates : 1.with the ability to add catchemnt shape to the map\n#          2.more functions are added to the map function, mean,sum,...\n#          3.improvements about calculation\n#\n#Tips\n#\n#1. All the #####libraries##### needed must be #####installed##### first, and click yes on the \n#   pop-up window during the installation. if the error comes no function found, the problem must be\n#   within the libraries or the functions existing in main.R\n#2. The format of the dataset should be the same with the dataset in Euporias\n#3. This code only suits for the Euporias Project, for other uses, it may not work\n#4. Main library is ecomosUDG.Raccess and downscaleR\n#5. Main program is in the file Data_Analysis, and in the 'load source file' part, file has to be set correctly\n#6. More detailed instructions can be found on github about those two libraries.\n#7. When using loadGridData(), if lon or lat, has to vary from negative to positive, e.g. c(-3,2), and if error \n#   comes out, try to reinstall(rJava)package.Note: do not install first, once encounter an error, install rJava\n\n\n\n\n\n\n#Load Source File\n#############################################################################################################################\n\n\nsource(\"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\R\\\\Data_Analysis\\\\Main.R\")\n#loginECOMS_UDG(\"ber\",\"AgernAlle5\")#log in the forecast data\nloginECOMS_UDG(\"Yuanchao\",\"abcd1234\")\n\n#Main Variables and Initial Conditions\n############################################################################################################################\n#all the variables will be stored in an environment called 'Variables'\n\n\nVariables <- new.env()\n\n\n#research area\n#before this step, spain02Files has to be checked to relate the index and the related file. \n#dataInventory() can finish the job, telling you more about the dataset\n#testData=loadGridData(spain02Files[3], \"tasmax\", latLim=c(30, 45), lonLim=c(-9, 10), dictionary=FALSE, years=2000)\n\n\"\nIf you want to have a look at the whole area, use function getDataRange as below\ndataRange <- getDataRange(spain02Files[2])\nextLon <- c(dataRange[1],dataRange[2])\nextLat <- c(dataRange[3],dataRange[4])\n\"\n#for spain catchment\n# extLon <- c(-2.02,-1.75) \n# extLat <- c(43.07,43.33) \n#for whole spain\n# extLon <- c(-9.2,4.4)\n# extLat <- c(36,43.8)\n\nassign ('extLon', c(-9.2,4.4), env = Variables)\nassign ('extLat', c(36,43.8), env = Variables)\n\n\n#assign time extent for the data\n#obs (1950.1.1 - 2008.3.31) frc(1982.1.1 - 2010.6.30)\nassign('years', 1982:2007, env = Variables)#overlap 1982-2007\n\n#store the catchment shape file\nassign('catchment', NULL, env = Variables) \n\n#forecast dataset\n#forePr <- NULL\n\n#research area for plot precipitation, focus on certain cell\n#loc <- c(25,25)\n\n\n#Execution Part\n############################################################################################################################\n\n\n################################################Load Data\n\nyears <- Variables$years\nextLat <- Variables$extLat\nextLon <- Variables$extLon\nseason <- c(12,1,2)\n\nfrc <- loadECOMS(dataset = \"System4_seasonal_15\", var = \"tp\", members = 1:15, \n                   lonLim = extLon, latLim = extLat, season = season, years = years, leadMonth = 1, time = \"DD\")\n\n\nfilePath <- file.choose()\n#when loading data, mind the period of year, especially for some year-crossing sesonal calculation like winter(12,1,2)\nobs <- loadGridData(filePath, \"pr\", year = years,latLim=extLat, lonLim=extLon, season = season, dictionary=FALSE)\n\nassign('obs', obs, env = Variables)\nassign('frc',frc,env = Variables)\n###########################################################################################################################\n\n#############################################   Spatial Map \n\ndataset <- Variables$obs\n\n#Long term\n\ndata1 <- getSpatialMap(dataset, method = 'meanAnnualPreci',outputData = TRUE)\n\n\n#Short term\n\ndata2 <- getSpatialMap(dataset, method = 'meanAnnualPreci',outputData = TRUE)\n\n\n#Seasonal e.g.\n\nwinter <- getSpatialMap(dataset, method = 'winter',outputData = TRUE)\n\n\n##############################################   difference between Long and Short\nlon <- obs$xyCoords$x\nlat <- obs$xyCoords$y\ntitle('difference in precipitation')\n\n\ndif <- data2 - data1\ndift <- t(dif)\nimage.plot(lon,lat,dift,asp = 1, main = 'Difference (mm / year)', xlab = 'Longitude', ylab = 'Latitude')\nworld(add = TRUE)\n\n###############################################   Difference Comparison\ndif_new <- t(dif < -30) \nimage.plot(lon,lat,dif_new,asp = 1, main = 'Difference (mm / year)', xlab = 'Longitude', ylab = 'Latitude')\nworld(add = TRUE)\n\n\n#seasonal\n\ngetSpatialMap(dataset, method = 'mean')\n\n\n\n#############################################   Bar Plot\n\n\ngetPreciBar(dataset,method = 'meanMonthly',plotRange = TRUE)\n\ngetPreciBar(dataset,method = 'annual')\n\n#for certain month, e.g. July\n\ngetPreciBar(dataset,method = 1)\ngetPreciBar(dataset,method = 2)\n\n#############################################   Plot\n\nfrc <- Variables$frc\nobs <- interpGridData(Variables$obs, new.grid = getGrid(frc), method = 'nearest')\n\ntercileValidation(frc,obs)\n\n\nboxplotValidation(frc,obs,2000)\n\nbubbleValidation(frc,obs, 2000, size.as.probability = F, score = F)\n\nbubbleValidation(frc,obs, 2000, pie = T)\n\n###############################################   special plot with leadmonth\n\n\na <- lapply(c(1:6), function(x) loadECOMS(dataset = \"System4_seasonal_15\", var = \"tp\", members = 1:15, \n                      lonLim = extLon, latLim = extLat, season = 11, years = 2000, leadMonth = x, time = \"DD\"))\n\nfilePath <- file.choose()\n#when loading data, mind the period of year, especially for some year-crossing sesonal calculation like winter(12,1,2)\nb <- loadGridData(filePath, \"pr\", year = 1999:2008,latLim= c(43.07,43.33) , lonLim=c(-2.02,-1.75) , season = NULL, dictionary=FALSE)\n\n\nnewPreci <- list()\n\nfor (x in 1:6) newPreci[[x]]<- a[[x]][[2]]\n\n\n\n\n#c <- sum(apply(newPreci[[1]],MARGIN = 1, FUN = sum, na.rm = TRUE))\npreciObs <- sum(apply(b$Data, MARGIN = 1, FUN=sum, na.rm = TRUE))\n\n\npreci1 <- lapply(1:6,function(x) apply(newPreci[[x]],MARGIN = c(1,2), FUN = sum, na.rm = TRUE))\npreci2 <- sapply(1:6, function(x) apply(preci1[[x]],MARGIN = 1,FUN = sum, na.rm = TRUE))\n\npreci3 <- apply(preci2,MARGIN = 2, FUN = sum)\n\nplotPreci1 <- c(preciObs,preci3)\nnames(plotPreci1) <- c('0','1','2','3','4','5','6')\nbarplot(plotPreci)\n\n\n##################################################  ERA interim #################################################\n\n###################### for spain \n\n\nyears <- c(1991:2000)\n#for Chile\nextLon <- c(-67.5, -75.5)\nextLat <- c(-56.5,-17.2)\n#for Chile catchment\nextLon <- c(-71.3, -70.2)\nextLat <- c(-36.6,-35.4)\n\n#for Thailand\nextLon <- c(97, 105.5)\nextLat <- c(5.2,20.3)\nseason <- c(12,1,2)\n\n#for Peru\nextLon <- c(-83, -66)\nextLat <- c(-20,0)\n\n\nfrc <- loadECOMS(dataset = \"System4_seasonal_15\", var = \"tas\", members = 1:15, \n                 lonLim = extLon, latLim = extLat, season = season, years = years, leadMonth = 3, time = \"DD\")\n\nobs <- loadECOMS(dataset = 'WFDEI',var = 'tas', lonLim = extLon, latLim = extLat, season = season, years = NULL)\n\nobs1 <- interpGridData(obs, new.grid = getGrid(frc), method = 'nearest')\n\ntercileValidation(frc,obs1)\n\ndataset <- obs\n\ndata2 <- getSpatialMap(dataset, method = 'meanAnnualPreci',outputData = TRUE)\n\n########################################### comparison with different dataset ##############################################\n\n\n\n\n",
    "created" : 1434726713748.000,
    "dirty" : false,
    "encoding" : "ASCII",
    "folds" : "",
    "hash" : "2683008380",
    "id" : "3655EB1F",
    "lastKnownWriteTime" : 1430902883,
    "path" : "C:/DHI_Projects/11811405/Seasonal_Forecasting/R/Data_Analysis/Start_code.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}