{
    "contents" : "library(hyfo)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(ecomsUDG.Raccess)\nloginECOMS_UDG(\"Yuanchao\",\"abcd1234\")\nlibrary(downscaleR)\nresPath <- \"C:\\\\Users\\\\xyc\\\\Desktop\\\\res_hyfo.csv\"\n\n############################# Rainfall ###########################\n\n# calculating the mean precipitation on the catchment. since in each catchment, the rainfall is\n#weighted\nfilePath <- file.choose()\na <- dget(\"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\Data\\\\From_website_realtime\\\\totalPreci_catchment_stations.txt\")\n\n# There are 2 extreme values needs to be set NA\na[[4]][2415, 2] <- NA\na[[4]][2414, 2] <- NA\n \n# Rainfall VS elevation\nrE <- getAnnual(a, output = 'mean')\nrE$Elevation <- c(183,313,97,25,323)\n\nmainLayer <- ggplot(rE) +\n  aes(x = Elevation, y = AnnualPreci,colour = Name) +\n  geom_point(size = 10) +\n  geom_smooth(method=lm, aes(group = 1)) +\n  coord_cartesian(xlim = NULL,ylim=c(0,2800)) +\n  theme(axis.text.x = element_text(size = rel(2)),\n        axis.text.y = element_text(size = rel(2)),\n        axis.title.x = element_text(size = rel(2)),\n        axis.title.y = element_text(size = rel(2)))\nprint(mainLayer)\n\n\n\n\n# Combine different time series.\naNames <- names(a)\naAll <- mapply(function(x, y) plotTS(a[[x]], output = 'ggplot', name = aNames[y]), \n               x = c(1,2,3,5), y = c(1,2,3,5), SIMPLIFY = F)\nplotTS_comb(list = aAll, nrow = 4)\n\na2 <- extractPeriod(a, comm = T)\na3_o <- list2Dataframe(a2)\na3 <- fillGap(a3_o)\n\n# Rainfall situation of the catchment.\ngetAnnual(a)\ngetAnnual(dataframe = a3_o)\ngetAnnual(dataframe = a3)\n\n\n\n\n\n\n##################################### weighed rainfall #############################\n\n\n# new factor Calculate the weighted rainfall\nDCAT1 <- 0.111 * a3[2] + 0.124 * a3[3] + 0.542 * a3[6] + 0.227 * a3[4] + 0.166 * a3[5]\nANA <- 0.265 * a3[2] + 0.785 * a3[3]\nDCAT2 <- 0.111 * a3[2] + 0.124 * a3[3] + 0.542 * a3[6] + 0.227 * a3[4] + 0.166 * a3[5]\nERE <- 0.111 * a3[2] + 0.124 * a3[3] + 0.542 * a3[6] + 0.227 * a3[4] + 0.166 * a3[5]\nDSC <- 0.111 * a3[2] + 0.124 * a3[3] + 0.542 * a3[6] + 0.227 * a3[4] + 0.166 * a3[5]\n\n\n# old factor\n# DCAT1 <- 0.098 * a3[2] + 0.111 * a3[3] + 0.472 * a3[6] + 0.202 * a3[4] + 0.148 * a3[5]\n# ANA <- 0.328 * a3[2] + 0.972 * a3[3]\n# DCAT2 <- 0.098 * a3[2] + 0.111 * a3[3] + 0.472 * a3[6] + 0.202 * a3[4] + 0.148 * a3[5]\n# ERE <- 0.098 * a3[2] + 0.111 * a3[3] + 0.472 * a3[6] + 0.202 * a3[4] + 0.148 * a3[5]\n# DSC <- 0.098 * a3[2] + 0.111 * a3[3] + 0.472 * a3[6] + 0.202 * a3[4] + 0.148 * a3[5]\n\n\n\ntotalPre <- (DCAT1 * 1.65 + ANA * 48.85 + DCAT2 * 12.11 + ERE * 152.17 + DSC * 56.98) / \n  (1.65 + 48.85 + 12.11 + 152.17 + 56.98)\n\n\ntotalPre <- data.frame(Date = a3[1], value = totalPre)\ncolnames(totalPre) <- c('Date', 'value')\n\ngetAnnual(dataframe = totalPre)\n\n\n# plot the mean rainfall\\\n\nb <- getPreciBar(TS = totalPre, method = 'annual')\n\n# so the dry year is 2001, wet year is 2013.\n\n\n# Analysis for dry year and wet year.\n# First take ensemble\n\ndry <- getHisEnsem(totalPre, example = c('2002-7-1', '2002-12-31'), buffer = 60, plot = 'cum', output = 'ggplot')\nwet <- getHisEnsem(totalPre, example = c('2013-1-1', '2013-12-31'), buffer = 30, plot = 'cum',output = 'ggplot')\n\n################ rainfall ESP was moved down in this page together with ESP\n\n\n\n\n#####################################  system4 ############################################\n\n### bias correction???###\nsimulationDate <- seq(from = as.Date('2002-7-1'), to = as.Date('2003-12-31'), by = '1 month')\n\nsimulationDate <- as.POSIXlt(simulationDate)\nallMonths <- simulationDate$mon + 1\nallYears <- simulationDate$year + 1900\n\n# Get all the time series from forecasting\nlapply(1:13, function(x) writeFrc(season = allMonths[x:(x + 5)], years = allYears[x + 5], \n                                 firstYear = allYears[x]))\n\n\n\n# setup a temperary data loading function.\n\nwriteFrc <-function(season, years, firstYear) {\n  frc <- loadECOMS(dataset = \"System4_seasonal_15\", var = \"tp\", members = NULL, \n                   lonLim = c(-2.4,-1.5), latLim = c(42.8,43.6), season = season, years = years, leadMonth = 1, time = \"DD\")\n  \n  \n  fileName <- paste('S4_', firstYear, '-', season[1], '-', '1', sep = '')\n  \n  \n  # up left cell for the catchment, for station erenozu\n  frc_file1 <- getFrcEnsem(frc, cell = c(1, 2))\n  filePath1 <- paste('C:/Users/xyc/Desktop/Ensemble/System4/', fileName, '_1.txt', sep = '')\n  write.table(frc_file1, filePath1, row.names = F, sep = ',')\n  \n  # up right cell for the catchment, for other stations\n  frc_file2 <- getFrcEnsem(frc, cell = c(2, 2))\n  filePath2 <- paste('C:/Users/xyc/Desktop/Ensemble/System4/', fileName, '_2.txt', sep = '')\n  write.table(frc_file2, filePath2, row.names = F, sep = ',')\n  \n  return(NULL)\n}\n\n\n\n\n\nfrc <- loadECOMS(dataset = \"System4_seasonal_15\", var = \"tp\", members = NULL, \n                 lonLim = c(-2.4,-1.5), latLim = c(42.8,43.6), season = c(7,8,9,10,11,12), years = 2002, leadMonth = 1, time = \"DD\")\nfrc_file <- getFrcEnsem(frc, cell = c(2,2))\n\n\n\n############################ S4 accuracy and reliebility ###############################\n\nyears <- c(2000:2010)\nseason <- c(3, 4, 5)\nmethod <- 'spring'\n\n#for spain\nextLat= c(36,43.8)\nextLon=c(-9.2,4.4)\n\n\n#for Chile\nextLon <- c(-67.5, -75.5)\nextLat <- c(-56.5,-17.2)\n#for Chile catchment\nextLon <- c(-71.3, -70.2)\nextLat <- c(-36.6,-35.4)\n\n#for Thailand\nextLon <- c(97, 105.5)\nextLat <- c(5.2,20.3)\n\n\n#for Peru\nextLon <- c(-83, -66)\nextLat <- c(-20,0)\n\n\nfrc <- loadECOMS(dataset = \"System4_seasonal_15\", var = \"tp\", members = NULL, lonLim = extLon, \n                 latLim = extLat, season = season, years = years, leadMonth = 1, \n                 time = \"DD\")\n\nobs <- loadECOMS(dataset = \"WFDEI\", var = \"tp\", lonLim = extLon, latLim = extLat, \n                 season = season, years = years, time = \"DD\")\n\nobs <- interpGridData(obs, new.grid = getGrid(frc), method = \"nearest\")\n\nfrc_mat <- getSpatialMap(frc, method = method, scale = 'sqrt')\nobs_mat <- getSpatialMap(obs, method = method, scale = 'sqrt')\n\n\n\ndif_mat <- frc_mat - obs_mat\n#data <- dif_mat\n#data[dif_mat > 50] <- 1\n#data[dif_mat <= 50] <- 0\ngetSpatialMap_mat(dif_mat, title = '')\n\nfrc_ggplot <- getSpatialMap(frc, method = method, scale = 'sqrt', output = 'ggplot', name = 'S4')\nobs_ggplot <- getSpatialMap(obs, method = method, scale = 'sqrt', output = 'ggplot', name = 'OBS')\n\ngetSpatialMap_comb(frc_ggplot, obs_ggplot, x = 'lon', y = 'lat')\n\ntercileValidation(frc, obs)\n\n########################### ROC score ########################################\n\nroc <- data.frame(x = c(1/7, 3/7, 5/7, 6/7, 1), y = c(0, 0.5, 0.5,0.75,1))\n\n\n\n###########################   Monthly comparison between S4 and OBS ####################\nfrc <- loadECOMS(dataset = \"System4_seasonal_15\", var = \"tp\", members = NULL, \n                 lonLim = c(-2.4,-1.5), latLim = c(42.8,43.6), season = c(7,8,9,10,11,12), years = 2002, leadMonth = 1, time = \"DD\")\nfrc_file <- getFrcEnsem(frc, cell = c(2,2))\n\n\nstart <- '2002-7-1'\nend <- '2002-12-28'\n\nTS_s4 <- frc_file[,c(1,2)]\nmm_s4 <- getPreciBar(TS = frc_file, method = 'meanMonthly', output = 'ggplot', name = 'S4')\n\nTS_Ana <- extractPeriod(dataframe = a3[,c(1,2)], start = start, end = end)\nmm_Ana <- getPreciBar(TS = TS_Ana, method = 'meanMonthly', output = 'ggplot', name = 'Ana')\n\n\nTS_Ana_total <- getHisEnsem(TS = a3[,c(1,2)], example = c(start, end))\nmm_Ana_total <- getPreciBar(TS = TS_Ana_total, method = 'meanMonthly', output = 'ggplot', name = 'Ana_full_period')\n\nTS_Art <- extractPeriod(dataframe = a3[,c(1,3)], start = start, end = end)\nmm_Art <- getPreciBar(TS = TS_Art, method = 'meanMonthly', output = 'ggplot', name = 'Art')\n\nTS_Art_total <- getHisEnsem(TS = a3[,c(1,3)], example = c(start, end))\nmm_Art_total <- getPreciBar(TS = TS_Art_total, method = 'meanMonthly', output = 'ggplot', name = 'Art_full_period')\n\n\n\nxxxx <- getPreciBar_comb(mm_s4, mm_Ana, mm_Art, mm_Ana_total, mm_Art_total, nrow = 5, x = 'Month', y = 'Precipitation (mm/day)')\n\n\n\n\n\n\n\nmm <- rbind(mm_s4, mm_Ana, mm_Art)\n\nmainLayer <- ggplot(data = mm) +\n  aes(x = Index, y = Preci, fill = Name) +\n  geom_bar(stat = 'identity', position = 'dodge')\nprint(mainLayer)\n\ndate <- as.POSIXlt(frc_file[,1])\ndata <- frc_file[,-2]\n\nmonthIndex <- date$mon + 1\n\ndata_mm <- lapply(data, function(x) tapply(x, INDEX = monthIndex, FUN = mean))\n\ndata_mm <- do.call('rbind', data_mm)\n\n\n\n\n\n### bias correction???###\nresPath <- 'C:/Users/xyc/Desktop/frc_test.txt'\nwrite.table(frc_file, resPath, row.names = F, sep = ',')\n\n\n\n\n\n#################################################################################\n\n\nfilePath <- \"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\Data\\\\spain02Pr\\\\Spain02D_v2_pr.nc\"\n\nobs <- loadECOMS(dataset = \"WFDEI\", var = \"tp\", \n                 lonLim = c(-2.4,-1.5), latLim = c(42.8,43.6), season = c(12,1,2), years = NULL, leadMonth = 2, time = \"DD\")\nobs <- loadGridData(filePath, var = \"pr\", \n                    lonLim = c(-2.4,-1.5), latLim = c(42.8,44.5), dic = F, years = 1980)\nobs_hyfo <- loadNcdf(filePath, varname = 'pr', lat = c(42.8,44.5), lon = c(-2.4,-1.5), year = 1980)\n# Since frc grid is larger, so used as new grid.\nobs1 <- interpGridData(obs, new.grid = getGrid(frc))\nfrc1 <- biasCorrection(obs1, frc, frc, method = 'unbiasing')\n\n\n\n\n\n\n\n\n\n##################################### ESP PLOT ##############################################\n\n\nana <- read.table(\"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\Data\\\\From_website_realtime\\\\Catchment_stations\\\\ANARBE_D1W1\\\\Discharge.txt\",\n                  sep = ',')\n\nere <- read.table(\"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\Data\\\\From_website_realtime\\\\Catchment_stations\\\\Ere??ozu D2W1\\\\Discharge.txt\",\n                  sep = ',')\n\n###### generate different ensembles.\n\nstart <- seq(as.Date('2002-7-1'), length = 13, by = '1 month')\nend <- seq(as.Date('2002-12-31'), length = 13, by = '1 month')\nana_period <- extractPeriod_dataset(ana, '1999-10-28', '2015-2-1')\n\n# Discharge comparison\ngetHisEnsem(ana_dry, example = c('2005-7-1', '2006-7-1'), plot = 'cum')# wet period before dry\ngetHisEnsem(ana_dry, example = c('2003-7-1', '2003-10-1'), plot = 'cum')# dry period\ngetHisEnsem(ana_dry, example = c('2003-1-1', '2003-12-31'), plot = 'cum')\n# precipitation\n\n\ndata_d <- mapply(function(x, y, z) getHisEnsem(ana_period, example = c(x, y), name = z, plot = 'cum',output = 'ggplot'), \n               start, end, z = 1:13, SIMPLIFY = F)\n\ngetEnsem_comb(list = data_d, nrow = 13)\n\n# Rainfall comparison\n\ndata_r <- mapply(function(x, y, z) getHisEnsem(totalPre, example = c(x, y), name = z, plot = 'cum',output = 'ggplot'), \n                 start, end, z = 1:6, SIMPLIFY = F)\n\ntotalPre_file <- getHisEnsem(totalPre, example = c('2003-7-1', '2003-12-31'), plot = 'norm')\nwrite.csv(totalPre_file, resPath, row.names = F)\ngetEnsem_comb(list = data_r, nrow = 12)\n\n\n\n#################################### Reservoir ############################################\n\n\nfilePath <-  \"C:\\\\Users\\\\xyc\\\\Desktop\\\\res_hyfo.csv\"\nreservoir <- read.csv(filePath, header = T)\n\nreservoir <- reservoir[c(1,2,4,6,7,8,9)]\nreservoir$Date <- as.Date(reservoir$Date, format = '%d/%m/%Y')\nreservoir$surfaceArea <- as.numeric(levels(reservoir$surfaceArea))[reservoir$surfaceArea]\n\n#### water level and surface area and volume\ny <- expression(paste('Surface Area ( km'^'2',')'))\n\nmainLayer <- ggplot(reservoir) +\n  aes(x = Water.level, y = surface.area) +\n  geom_line() +\n  theme(axis.text.x = element_text(size = rel(1.8)),\n        axis.text.y = element_text(size = rel(1.8)),\n        axis.title.x = element_text(size = rel(1.8)),\n        axis.title.y = element_text(size = rel(1.8))) +\n  labs(x = 'Water Level (m)', y = y)\nprint(mainLayer)\n\n\n\n\n\n\n#################################### Hydropower Plant regulation#####################################\n\n### 1. get the relation ship about hydropower\n\nfilePath <- \"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\Data\\\\Diversion.txt\"\nhydroPower <- read.table(filePath, skip = 3)[c(1, 3, 4, 5, 6)]\nhydroPower[, 1] <- as.Date(hydroPower[, 1])\nhydroPower[hydroPower == -1e-30] <- NA\ncolnames(hydroPower) <- c('Date', 'Diversion', 'Observation', 'Water_Level', 'Simulated')\n\n\nmainLayer <- ggplot(hydroPower) +\n  geom_point(aes(x = Observation, y = Diversion)) +\n  coord_cartesian(xlim = c(0, 4), ylim = NULL )+\n  geom_segment(aes(x = 0.2, y = 0, xend = 2, yend = 1.5), size = 2, color = 'blue') +\n  geom_segment(aes(x = 2, y = 1.5, xend = 4, yend = 1.5), size = 2, color = 'blue') +\n  geom_segment(aes(x = 150, y = 0, xend = 150, yend = 2), linetype = 'twodash', size = 1) + \n#  annotate('text', label = 'x = 150', x = 148, y = 1, size = 20) + \n  annotate('text', label = 'y = 0.8333 * x - 0.1667', x = 0.8, y = 1.2, angle = 40, size = 8) +\n  theme(axis.text.x = element_text(size = rel(1.8)),\n        axis.text.y = element_text(size = rel(1.8)),\n        axis.title.x = element_text(size = rel(1.8)),\n        axis.title.y = element_text(size = rel(1.8))) +\n  labs(x = expression(paste('Discharge at gauging station Anarbe ( m'^'3','/s )')), \n       y = expression(paste('Diversion ( m'^'3','/s )')))\nprint(mainLayer)\n\n\n### 2. improvements about the diversion model\n\nfilePath <-  \"C:\\\\Users\\\\xyc\\\\Desktop\\\\res_hyfo.csv\"\nsimObs <- read.csv(filePath, header = T)\n\nsimObs$Date <- as.Date(simObs$Date, format = '%d/%m/%Y')\n\n# for obs and model1\nsimObs <- simObs[, c(1,2,4)]\ncolnames(simObs) <- c('Date', 'Observation', 'Simulation')\n\n\nsimObs_ggplot <- melt(simObs, id.vars = 'Date')\n\nmainLayer <- ggplot(simObs_ggplot) +\n  aes(x = Date, y = value, colour = variable) + \n  geom_line(size = 1) +\n  theme(axis.text.x = element_text(size = rel(1.8)),\n        axis.text.y = element_text(size = rel(1.8)),\n        axis.title.x = element_text(size = rel(1.8)),\n        axis.title.y = element_text(size = rel(1.8))) +\n  labs(x = 'Date', y = expression(paste('Diversion ( m'^'3','/s )')))\nprint(mainLayer)\n\n\n####################################  Guging stations #################################\n\n\nallStations <- dget(\"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\Data\\\\From_website_realtime\\\\totalPreci_other_stations.txt\")\ncatStations <- dget(\"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\Data\\\\From_website_realtime\\\\totalPreci_catchment_stations.txt\")\n\nall <- c(allStations, catStations)\n\ngetAnnual(catStations)\nnames <- c('Ana', 'Art', 'Cen', 'Ere', 'Goi')\n\nstations <- mapply(function(x, y) getPreciBar(TS = x, method = 'meanMonthly', output = 'ggplot', name = names[y]), \n                   x = catStations, y = 1:5, SIMPLIFY = FALSE)\ncat_comb <- getPreciBar_comb(list = stations, nrow = 2)\n\n#################################### Spain02 Preci #####################################\nfilePath <- \"C:\\\\DHI_Projects\\\\11811405\\\\Seasonal_Forecasting\\\\Data\\\\spain02Pr\\\\Spain02D_v2_pr.nc\"\nobs <- loadGridData(filePath, \"pr\", year = 1950:2007,latLim= c(36,43.8) , lonLim=c(-9.2,4.4) , season = NULL, dictionary=FALSE)\nobs <- loadNcdf(filePath, 'pr')\nbMon <- lapply(1:12, function(x) getPreciBar(b, x, output = 'ggplot'))\ngetPreciBar_comb(bMon, nrow = 3)\n",
    "created" : 1437680807606.000,
    "dirty" : false,
    "encoding" : "ASCII",
    "folds" : "",
    "hash" : "3004976700",
    "id" : "6BB6CF42",
    "lastKnownWriteTime" : 1440432373,
    "path" : "C:/DHI_Projects/11811405/Seasonal_Forecasting/R/Data_Analysis/Analysis.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}