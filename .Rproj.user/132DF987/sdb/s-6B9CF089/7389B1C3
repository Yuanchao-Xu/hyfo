{
    "contents" : "#' Collect data from different excel files\n#' \n#' @param folderName A string showing the folder path.\n#' @param keyword A string showing the extracted column, e.g., waterLevel, waterBalance.\n#' @param output A boolean showing whether the output is given.\n#' @return The collected data from different excel files.\n#' @export\n#@importFrom utils write.table\ncollectData_excel_anarbe <- function(folderName, keyword = NULL, output = TRUE){\n\n    message('In order to make \"hyfo\" easier to be installed, this part is commented,\n            check original R file in your computer or go to \n            https://github.com/Yuanchao-Xu/hyfo/blob/master/R/collectData_excel.R\n            for ideas.')\n  \n  \n#   newFileName <- file.choose(new = TRUE)\n#   message ('new file should be located a different location than the excel folder, \n#          in order to avoid error.\n#          At least 2 excels should be in the folder\\n')\n#   \n#   message ('this function only applies to strange spain dem operation record file, and this strange file changes\n#          its format in the middle of the record. For other applications, some tiny changes needs to be made.')\n#   if (is.null(keyword)) stop('key word is needed, e.g.\"waterLevel\".')\n#   \n#   fileNames <- list.files(folderName, pattern = '*.xls', full.names = TRUE)\n#   data <- lapply(fileNames, FUN = readColumn_excel_anarbe, keyword = keyword)\n#   checkBind(data, 'rbind')\n#   data <- do.call('rbind', data)\n#   \n#   data_new <- data.frame(data)\n#   \n#   data_new <- data_new[order(data_new[, 1]), ]\n#   \n#   \n#   startDate <- data_new[1, 1]\n#   endDate <- data_new[length(data_new[, 1]), 1]\n#   \n#   Date <- as.factor(seq(startDate, endDate, by = 1))\n#   \n#   if (length(Date) != length(data_new[, 1])) stop('check if the excel files are continuous')\n#   \n#   colnames(data_new) <- c('Date', keyword)\n#   \n#   write.table(data_new, file = newFileName,\n#               row.names = FALSE, col.names = TRUE, sep = ',')\n#   if(output == TRUE) return(data_new)\n}\n\n# \n# #@importFrom xlsx read.xlsx\n# readTable_excel_anarbe <- function(fileName){\n#   \n#   index <- tail(strsplit(fileName, '\\\\.|\\\\ ')[[1]], 3)\n#   raw_year <- index[1]\n#   raw_mon <- index[2]\n#   \n#   raw <- read.xlsx(fileName, sheetName='A')\n#   startRow <- which(raw == 'COTA', arr.ind = TRUE)[1]+4\n#   startCol <- which(raw == 'COTA',arr.ind = TRUE)[2]-1\n#   stopRow <- which(raw =='TOTAL',arr.ind = TRUE)[1]-1\n#   stopCol1 <- startCol + 17\n#   stopCol2 <- which(raw == 'SUPERFICIE', arr.ind = TRUE)[2]\n#   data <- cbind(raw[startRow:stopRow,startCol:stopCol1], raw[startRow:stopRow,stopCol2])\n#   \n#   \n#   yearIndex <- rep(raw_year, stopRow-startRow+1)\n#   monIndex <- rep(raw_mon, stopRow-startRow+1)\n#   \n#   data <- cbind(yearIndex, monIndex, data)\n#   return(data)\n# }\n# # \n# #'@importFrom utils tail\n# readColumn_excel_anarbe <- function(fileName, keyword = NULL){\n#   \n#   index <- tail(strsplit(fileName, '\\\\.|\\\\ ')[[1]],3)\n#   year <- as.numeric(index[1])\n#   mon <- as.numeric(index[2])\n#   \n#   if (year == 99) {\n#     year = year + 1900\n#   } else year = year + 2000\n#   \n#   word = c('COTA', 'Cota\\n(m)', 'TOTAL', '  TOTAL')\n#   \n#   if (keyword == 'waterLevel') {\n#     searchWord <- c('COTA', 'Cota\\n(m)')\n#   } else if (keyword == 'discharge_ERE') {\n#     searchWord <- c('AF.ERE-', 'Caudal\\n(m??/s)')\n#   } else if (keyword == 'waterBalance') {\n#     searchWord <- c('INCREMENTO', 'al Canal Bajo', 'AFORO',\n#                     'Variaci??n\\nvolumen embalsado')\n#   } else if (keyword == 'surfaceArea') {\n#     searchWord <- c('SUPERFICIE', 'SUPERFICIE')\n#   } else if (keyword == 'volume') {\n#     searchWord <- c('EMBALSADO', 'Volumen\\n(m????)')\n#   }\n#   \n#   \n#   if (year == 1999 | year < 2009 | (year == 2009 & mon < 5)) {\n#     raw <- xlsx::read.xlsx(fileName, sheetName = 'A')\n#     startIndex <- which(raw == word[1], arr.ind = TRUE)\n#     endIndex <- which(raw == word[3], arr.ind = TRUE)\n#     startRow <- startIndex[1]+4\n#     endRow <- endIndex[1]-1\n#     \n#     dayCol <- endIndex[2]\n#     day <- raw[startRow:endRow, dayCol]\n#     \n#     targetCol <- which(raw == searchWord[1], arr.ind = TRUE)[2]\n#     \n#     if (is.na(targetCol)) stop(sprintf('capture nothing in %s', fileName))\n#     \n#     if (keyword == 'waterBalance') {\n#       targetStart <- targetCol\n#       targetEnd <- which(raw == searchWord[3], arr.ind = TRUE)[2]\n#       a <- raw[startRow:endRow, targetStart:targetEnd]\n#       a <- sapply(a, function(x) as.numeric(levels(x)[x]))\n#       \n#       if (year == 1999 & mon == 4) {\n#         \n#         target <- data.frame(a[, 2] * 86.4, a[, 5] * 86.4, rep(NA, dim(a)[1]), a[, 6] * 86.4,\n#                              a[, 4] * 86.4, a[, 11] * 86.4, a[, 3], a[, 7], rep(NA, dim(a)[1]), a[, 1])\n#       } else {\n#         target <- data.frame(a[, 2] * 86.4, a[, 5] * 86.4, a[, 6] * 86.4, a[, 7] * 86.4, \n#                              a[, 4] * 86.4, a[, 12] * 86.4, a[, 3], a[, 8], rep(NA, dim(a)[1]), a[, 1])\n#       }   \n#       \n#     } else {\n#       target <- raw[startRow:endRow, targetCol]\n#       if (keyword == 'discharge_ERE') target <- as.numeric(levels(target))[target]/1000\n#     }\n#     \n#   } else {\n#     raw <- read.xlsx(fileName,sheetName = 'parte del embalse')\n#     startIndex <- which(raw == word[2], arr.ind = TRUE)\n#     endIndex <- which(raw == word[4], arr.ind = TRUE)\n#     startRow <- startIndex[1]+1\n#     endRow <- endIndex[1]-2\n#     \n#     dayCol <- endIndex[2]\n#     day <- raw[startRow:endRow, dayCol]\n#     targetCol <- which(raw == searchWord[2], arr.ind=TRUE)[2]\n#     if (is.na(targetCol)) stop(sprintf('capture nothing in %s', fileName))\n#     \n#     if (keyword == 'waterBalance') {\n#       targetStart <- targetCol\n#       targetEnd <- which(raw == searchWord[4], arr.ind=TRUE)[2]\n#       target <- raw[startRow:endRow, targetStart:targetEnd]\n#       \n#     } else {\n#       target <- raw[startRow:endRow, targetCol]\n#     }\n#     \n#   }\n#   \n#   \n#   startDate <- as.Date(paste(year, mon, day[1], sep = '-'))\n#   endDate <- as.Date(paste(year, mon, tail(day,1), sep = '-'))\n#   \n#   Date <- seq(startDate, endDate, 1)\n#   output <- data.frame(Date, as.vector(target))\n#   colnames(output) <- c('Date', seq(1, dim(output)[2] - 1))\n#   message(fileName)  \n#   return(output)\n#   \n# }\n# \n",
    "created" : 1435785844658.000,
    "dirty" : false,
    "encoding" : "ASCII",
    "folds" : "",
    "hash" : "223923084",
    "id" : "7389B1C3",
    "lastKnownWriteTime" : 1435743884,
    "path" : "~/hyfo/R/collectData_excel.R",
    "project_path" : "R/collectData_excel.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}